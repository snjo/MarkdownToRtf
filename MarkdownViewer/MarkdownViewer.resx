<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerUpdate.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DE+LPD3yjLP38cwIaZSIzSZHAUuY7D9gXfW5SzaF53U5asnmTr41sq5SfIESTFRifWEEh8b25hd1YQ/D
        SyJHR156wZZOffeXXbC1cyNfEaHaK7zqoq3h1ZHXRIgJpwjk6yPsg3hj5E1d3nzJtvCWyFsjb7t0OLw9
        8o74S/DOCL8IxJK/p8sxEfZSvC/y/sgHLtsePhj5UOTY5dvDh5ePdPhI5KOXj4SPRSg9RSz6JyL8P/+N
        nX8H/pbP8HnaoT3apX2Ow/E4LnAOnA/nxflxnpwv5835cx3ANXFtXCfXy3Vz/fQD/UG/AH1EX9Fv9B/9
        SH/Sr/Qv/Ux/A33PfeB+cF+4P9wn7hf3jfsH3EvuKfeX+8z95r5z/xkHjAdgbDBGGC+MG8YP44jxxLhi
        fDHOgDHH+GMcMh4Zl4xPxinjlXHLl/heJ6/rxMpU2refC9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPT
        KIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPT
        KIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPT
        KIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPT
        KIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPT
        KIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQoA9MohCgD0yiEKAPTKIQogDXh/wAnaErZ6+eA
        ugAAAABJRU5ErkJggg==
</value>
  </data>
</root>